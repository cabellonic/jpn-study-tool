<!--  SettingsWindow.xaml  -->
<Window
    x:Class="JpnStudyTool.SettingsWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:JpnStudyTool.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:JpnStudyTool"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:JpnStudyTool.Models"
    xmlns:viewmodels="using:JpnStudyTool.ViewModels"
    Title="Settings"
    mc:Ignorable="d">

    <Grid
        x:Name="SettingsRootGrid"
        Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
        RequestedTheme="Light">

        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <Grid Margin="15">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock
                    Grid.Row="0"
                    Margin="0,0,0,10"
                    FontSize="24"
                    Text="Settings" />

                <StackPanel
                    Grid.Row="1"
                    Margin="0,0,0,10"
                    Spacing="5">
                    <CheckBox Content="Read clipboard content on startup" IsChecked="{Binding ReadClipboardOnLoad, Mode=TwoWay}" />
                </StackPanel>

                <StackPanel
                    Grid.Row="2"
                    Margin="0,0,0,15"
                    Spacing="8">
                    <TextBlock
                        Margin="0,0,0,5"
                        Style="{ThemeResource BaseTextBlockStyle}"
                        Text="Analysis Mode:" />
                    <ToggleSwitch
                        Header="Enable AI Analysis (Gemini)"
                        IsOn="{Binding UseAIMode, Mode=TwoWay}"
                        OffContent="Disabled"
                        OnContent="Enabled" />

                    <StackPanel Spacing="5" Visibility="{Binding IsApiKeyInputVisible, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                        <TextBlock Style="{ThemeResource CaptionTextBlockStyle}" Text="Gemini API Key:" />
                        <PasswordBox Password="{Binding GeminiApiKey, Mode=TwoWay}" PlaceholderText="Enter your Gemini API Key here" />
                        <TextBlock
                            Foreground="{ThemeResource SystemFillColorCriticalBrush}"
                            Style="{ThemeResource CaptionTextBlockStyle}"
                            Text="{Binding ApiKeyWarningText, Mode=OneWay}"
                            TextWrapping="Wrap" />
                    </StackPanel>

                    <!--  AI Analysis Trigger Options  -->
                    <StackPanel
                        Margin="0,10,0,0"
                        Spacing="5"
                        Visibility="{Binding IsAiAnalysisOptionsVisible, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                        <TextBlock Style="{ThemeResource BodyStrongTextBlockStyle}" Text="When to Analyze with AI:" />
                        <RadioButton
                            Content="Analyze only when entering detail view (On Demand)"
                            GroupName="AiTrigger"
                            IsChecked="{Binding AiAnalysisTriggerMode, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=OnDemand}" />
                        <RadioButton
                            Content="Analyze automatically when sentence is copied (On Copy)"
                            GroupName="AiTrigger"
                            IsChecked="{Binding AiAnalysisTriggerMode, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=OnCopy}" />
                        <RadioButton
                            Content="Analyze last sentence when opened via global shortcut (On Global Open)"
                            GroupName="AiTrigger"
                            IsChecked="{Binding AiAnalysisTriggerMode, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=OnGlobalOpen}" />
                    </StackPanel>

                </StackPanel>

                <Border
                    Grid.Row="3"
                    Margin="0,5,0,15"
                    BorderBrush="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
                    BorderThickness="0,0,0,1" />

                <StackPanel
                    Grid.Row="4"
                    Margin="0,0,0,10"
                    Orientation="Horizontal">
                    <TextBlock
                        Margin="0,0,5,0"
                        VerticalAlignment="Center"
                        Text="Global Hotkey Gamepad:" />
                    <TextBlock
                        VerticalAlignment="Center"
                        FontWeight="SemiBold"
                        Text="{Binding DetectedGamepadName, FallbackValue='Detecting...', Mode=OneWay}" />
                </StackPanel>

                <TextBlock
                    Grid.Row="5"
                    Margin="0,0,0,10"
                    FontSize="20"
                    Text="Input Bindings" />

                <ListView
                    Grid.Row="6"
                    MaxHeight="350"
                    HorizontalContentAlignment="Stretch"
                    IsItemClickEnabled="False"
                    ItemsSource="{Binding Bindings}"
                    SelectionMode="None">
                    <ListView.HeaderTemplate>
                        <DataTemplate>
                            <Grid Padding="5,10" HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*" MinWidth="100" />
                                    <ColumnDefinition Width="3*" MinWidth="120" />
                                    <ColumnDefinition Width="3*" MinWidth="120" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Column="0"
                                    FontWeight="SemiBold"
                                    Text="Action" />
                                <TextBlock
                                    Grid.Column="1"
                                    FontWeight="SemiBold"
                                    Text="Keyboard Binding" />
                                <TextBlock
                                    Grid.Column="2"
                                    FontWeight="SemiBold"
                                    Text="Joystick Binding" />
                            </Grid>
                        </DataTemplate>
                    </ListView.HeaderTemplate>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="models:BindingConfig">
                            <Grid
                                Padding="5,5"
                                HorizontalAlignment="Stretch"
                                ColumnSpacing="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*" MinWidth="100" />
                                    <ColumnDefinition Width="3*" MinWidth="120" />
                                    <ColumnDefinition Width="3*" MinWidth="120" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Column="0"
                                    VerticalAlignment="Center"
                                    Text="{x:Bind ActionName}"
                                    TextTrimming="CharacterEllipsis" />

                                <Button
                                    Grid.Column="1"
                                    HorizontalAlignment="Stretch"
                                    Command="{Binding DataContext.StartCaptureKeyboardCommand, ElementName=SettingsRootGrid}"
                                    CommandParameter="{Binding}"
                                    Content="{Binding KeyboardBindingDisplayResolved, Mode=OneWay, FallbackValue='Set Keyboard'}"
                                    IsEnabled="{Binding DataContext.IsCapturingJoystick, ElementName=SettingsRootGrid, Converter={StaticResource NegatedBooleanConverter}}" />

                                <Button
                                    Grid.Column="2"
                                    HorizontalAlignment="Stretch"
                                    Command="{Binding DataContext.StartCaptureJoystickCommand, ElementName=SettingsRootGrid}"
                                    CommandParameter="{Binding}"
                                    Content="{Binding JoystickBindingDisplayResolved, Mode=OneWay, FallbackValue='Set Joystick'}"
                                    IsEnabled="{Binding DataContext.IsCapturingKeyboard, ElementName=SettingsRootGrid, Converter={StaticResource NegatedBooleanConverter}}" />
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <StackPanel
                    Grid.Row="7"
                    Margin="0,10,0,5"
                    HorizontalAlignment="Center"
                    Orientation="Vertical">
                    <TextBlock
                        HorizontalAlignment="Center"
                        Foreground="OrangeRed"
                        Text="{Binding CaptureStatusText, Mode=OneWay}" />
                    <Button
                        Margin="0,5,0,0"
                        Command="{Binding CancelCaptureCommand}"
                        Content="Cancel Capture"
                        IsEnabled="{Binding CanCancelCapture, Mode=OneWay}"
                        Visibility="{Binding CanCancelCapture, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" />
                </StackPanel>

                <StackPanel
                    Grid.Row="8"
                    Margin="0,10,0,0"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal"
                    Spacing="10">
                    <Button
                        Command="{Binding ResetKeyboardDefaultsCommand}"
                        Content="Reset Keyboard Defaults"
                        Style="{StaticResource SecondaryButtonStyle}" />
                    <Button
                        Command="{Binding ResetJoystickDefaultsCommand}"
                        Content="Reset Joystick Defaults"
                        IsEnabled="{Binding IsGamepadConnected, Mode=OneWay}"
                        Style="{StaticResource SecondaryButtonStyle}" />
                </StackPanel>

                <StackPanel
                    Grid.Row="9"
                    Margin="0,20,0,0"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal"
                    Spacing="10">
                    <Button
                        Command="{Binding SaveAndCloseCommand}"
                        Content="Save and Close"
                        Style="{StaticResource AccentButtonStyle}" />
                    <Button
                        Command="{Binding CancelCommand}"
                        Content="Cancel"
                        Style="{StaticResource SecondaryButtonStyle}" />
                </StackPanel>
            </Grid>
        </ScrollViewer>
    </Grid>

</Window>